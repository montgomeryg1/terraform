package test

type AutoGenerated struct {
	FormatVersion    string `json:"format_version"`
	TerraformVersion string `json:"terraform_version"`
	Variables        struct {
		EnvironmentToSizeMap struct {
			Value struct {
				Dev     string `json:"dev"`
				Prod    string `json:"prod"`
				Qa      string `json:"qa"`
				Staging string `json:"staging"`
			} `json:"value"`
		} `json:"environment_to_size_map"`
		KubernetesClientID struct {
			Value string `json:"value"`
		} `json:"kubernetes_client_id"`
		KubernetesClientSecret struct {
			Value string `json:"value"`
		} `json:"kubernetes_client_secret"`
		PublicSSHKeyPath struct {
			Value string `json:"value"`
		} `json:"public_ssh_key_path"`
		WorkspaceToEnvironmentMap struct {
			Value struct {
				Dev     string `json:"dev"`
				Prod    string `json:"prod"`
				Qa      string `json:"qa"`
				Staging string `json:"staging"`
			} `json:"value"`
		} `json:"workspace_to_environment_map"`
		WorkspaceToSizeMap struct {
			Value struct {
				Dev string `json:"dev"`
			} `json:"value"`
		} `json:"workspace_to_size_map"`
	} `json:"variables"`
	PlannedValues struct {
		Outputs struct {
			ClientCertificate struct {
				Sensitive bool `json:"sensitive"`
			} `json:"client_certificate"`
			ClientKey struct {
				Sensitive bool `json:"sensitive"`
			} `json:"client_key"`
			ClusterCaCertificate struct {
				Sensitive bool `json:"sensitive"`
			} `json:"cluster_ca_certificate"`
			ClusterPassword struct {
				Sensitive bool `json:"sensitive"`
			} `json:"cluster_password"`
			ClusterUsername struct {
				Sensitive bool `json:"sensitive"`
			} `json:"cluster_username"`
			Host struct {
				Sensitive bool `json:"sensitive"`
			} `json:"host"`
			KubeConfig struct {
				Sensitive bool `json:"sensitive"`
			} `json:"kube_config"`
		} `json:"outputs"`
		RootModule struct {
			Resources []struct {
				Address       string `json:"address"`
				Mode          string `json:"mode"`
				Type          string `json:"type"`
				Name          string `json:"name"`
				ProviderName  string `json:"provider_name"`
				SchemaVersion int    `json:"schema_version"`
				Values        struct {
					APIServerAuthorizedIPRanges interface{} `json:"api_server_authorized_ip_ranges"`
					DefaultNodePool             []struct {
						AvailabilityZones  interface{} `json:"availability_zones"`
						EnableAutoScaling  interface{} `json:"enable_auto_scaling"`
						EnableNodePublicIP interface{} `json:"enable_node_public_ip"`
						MaxCount           interface{} `json:"max_count"`
						MinCount           interface{} `json:"min_count"`
						Name               string      `json:"name"`
						NodeCount          int         `json:"node_count"`
						NodeTaints         interface{} `json:"node_taints"`
						OsDiskSizeGb       int         `json:"os_disk_size_gb"`
						Type               string      `json:"type"`
						VMSize             string      `json:"vm_size"`
					} `json:"default_node_pool"`
					DNSPrefix    string        `json:"dns_prefix"`
					Identity     []interface{} `json:"identity"`
					LinuxProfile []struct {
						AdminUsername string `json:"admin_username"`
						SSHKey        []struct {
							KeyData string `json:"key_data"`
						} `json:"ssh_key"`
					} `json:"linux_profile"`
					Location       string `json:"location"`
					Name           string `json:"name"`
					NetworkProfile []struct {
						LoadBalancerSku string `json:"load_balancer_sku"`
						NetworkPlugin   string `json:"network_plugin"`
					} `json:"network_profile"`
					PrivateLinkEnabled interface{} `json:"private_link_enabled"`
					ResourceGroupName  string      `json:"resource_group_name"`
					ServicePrincipal   []struct {
						ClientID     string `json:"client_id"`
						ClientSecret string `json:"client_secret"`
					} `json:"service_principal"`
					WindowsProfile []interface{} `json:"windows_profile"`
				} `json:"values,omitempty"`
				Values struct {
					Location string `json:"location"`
					Name     string `json:"name"`
				} `json:"values,omitempty"`
				Values struct {
					AddressPrefix                             string        `json:"address_prefix"`
					Delegation                                []interface{} `json:"delegation"`
					EnforcePrivateLinkEndpointNetworkPolicies bool          `json:"enforce_private_link_endpoint_network_policies"`
					EnforcePrivateLinkServiceNetworkPolicies  bool          `json:"enforce_private_link_service_network_policies"`
					Name                                      string        `json:"name"`
					NetworkSecurityGroupID                    interface{}   `json:"network_security_group_id"`
					ResourceGroupName                         string        `json:"resource_group_name"`
					RouteTableID                              interface{}   `json:"route_table_id"`
					ServiceEndpoints                          interface{}   `json:"service_endpoints"`
					VirtualNetworkName                        string        `json:"virtual_network_name"`
				} `json:"values,omitempty"`
				Values struct {
					AddressSpace       []string      `json:"address_space"`
					DdosProtectionPlan []interface{} `json:"ddos_protection_plan"`
					DNSServers         interface{}   `json:"dns_servers"`
					Location           string        `json:"location"`
					Name               string        `json:"name"`
					ResourceGroupName  string        `json:"resource_group_name"`
				} `json:"values,omitempty"`
			} `json:"resources"`
		} `json:"root_module"`
	} `json:"planned_values"`
	ResourceChanges []struct {
		Address      string `json:"address"`
		Mode         string `json:"mode"`
		Type         string `json:"type"`
		Name         string `json:"name"`
		ProviderName string `json:"provider_name"`
		Change       struct {
			Actions []string    `json:"actions"`
			Before  interface{} `json:"before"`
			After   struct {
				APIServerAuthorizedIPRanges interface{} `json:"api_server_authorized_ip_ranges"`
				DefaultNodePool             []struct {
					AvailabilityZones  interface{} `json:"availability_zones"`
					EnableAutoScaling  interface{} `json:"enable_auto_scaling"`
					EnableNodePublicIP interface{} `json:"enable_node_public_ip"`
					MaxCount           interface{} `json:"max_count"`
					MinCount           interface{} `json:"min_count"`
					Name               string      `json:"name"`
					NodeCount          int         `json:"node_count"`
					NodeTaints         interface{} `json:"node_taints"`
					OsDiskSizeGb       int         `json:"os_disk_size_gb"`
					Type               string      `json:"type"`
					VMSize             string      `json:"vm_size"`
				} `json:"default_node_pool"`
				DNSPrefix    string        `json:"dns_prefix"`
				Identity     []interface{} `json:"identity"`
				LinuxProfile []struct {
					AdminUsername string `json:"admin_username"`
					SSHKey        []struct {
						KeyData string `json:"key_data"`
					} `json:"ssh_key"`
				} `json:"linux_profile"`
				Location       string `json:"location"`
				Name           string `json:"name"`
				NetworkProfile []struct {
					LoadBalancerSku string `json:"load_balancer_sku"`
					NetworkPlugin   string `json:"network_plugin"`
				} `json:"network_profile"`
				PrivateLinkEnabled interface{} `json:"private_link_enabled"`
				ResourceGroupName  string      `json:"resource_group_name"`
				ServicePrincipal   []struct {
					ClientID     string `json:"client_id"`
					ClientSecret string `json:"client_secret"`
				} `json:"service_principal"`
				WindowsProfile []interface{} `json:"windows_profile"`
			} `json:"after"`
			AfterUnknown struct {
				AddonProfile     bool `json:"addon_profile"`
				AgentPoolProfile bool `json:"agent_pool_profile"`
				DefaultNodePool  []struct {
					MaxPods      bool `json:"max_pods"`
					VnetSubnetID bool `json:"vnet_subnet_id"`
				} `json:"default_node_pool"`
				EnablePodSecurityPolicy bool          `json:"enable_pod_security_policy"`
				Fqdn                    bool          `json:"fqdn"`
				ID                      bool          `json:"id"`
				Identity                []interface{} `json:"identity"`
				KubeAdminConfig         bool          `json:"kube_admin_config"`
				KubeAdminConfigRaw      bool          `json:"kube_admin_config_raw"`
				KubeConfig              bool          `json:"kube_config"`
				KubeConfigRaw           bool          `json:"kube_config_raw"`
				KubernetesVersion       bool          `json:"kubernetes_version"`
				LinuxProfile            []struct {
					SSHKey []struct {
					} `json:"ssh_key"`
				} `json:"linux_profile"`
				NetworkProfile []struct {
					DNSServiceIP        bool `json:"dns_service_ip"`
					DockerBridgeCidr    bool `json:"docker_bridge_cidr"`
					LoadBalancerProfile bool `json:"load_balancer_profile"`
					NetworkPolicy       bool `json:"network_policy"`
					PodCidr             bool `json:"pod_cidr"`
					ServiceCidr         bool `json:"service_cidr"`
				} `json:"network_profile"`
				NodeResourceGroup      bool `json:"node_resource_group"`
				PrivateFqdn            bool `json:"private_fqdn"`
				RoleBasedAccessControl bool `json:"role_based_access_control"`
				ServicePrincipal       []struct {
				} `json:"service_principal"`
				Tags           bool          `json:"tags"`
				WindowsProfile []interface{} `json:"windows_profile"`
			} `json:"after_unknown"`
		} `json:"change"`
	} `json:"resource_changes"`
	OutputChanges struct {
		ClientCertificate struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"client_certificate"`
		ClientKey struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"client_key"`
		ClusterCaCertificate struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"cluster_ca_certificate"`
		ClusterPassword struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"cluster_password"`
		ClusterUsername struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"cluster_username"`
		Host struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"host"`
		KubeConfig struct {
			Actions      []string    `json:"actions"`
			Before       interface{} `json:"before"`
			AfterUnknown bool        `json:"after_unknown"`
		} `json:"kube_config"`
	} `json:"output_changes"`
	Configuration struct {
		ProviderConfig struct {
			Azurerm struct {
				Name              string `json:"name"`
				VersionConstraint string `json:"version_constraint"`
			} `json:"azurerm"`
			Random struct {
				Name              string `json:"name"`
				VersionConstraint string `json:"version_constraint"`
			} `json:"random"`
		} `json:"provider_config"`
		RootModule struct {
			Outputs struct {
				ClientCertificate struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"client_certificate"`
				ClientKey struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"client_key"`
				ClusterCaCertificate struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"cluster_ca_certificate"`
				ClusterPassword struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"cluster_password"`
				ClusterUsername struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"cluster_username"`
				Host struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"host"`
				KubeConfig struct {
					Expression struct {
						References []string `json:"references"`
					} `json:"expression"`
				} `json:"kube_config"`
			} `json:"outputs"`
			Resources []struct {
				Address           string `json:"address"`
				Mode              string `json:"mode"`
				Type              string `json:"type"`
				Name              string `json:"name"`
				ProviderConfigKey string `json:"provider_config_key"`
				Expressions       struct {
					DefaultNodePool []struct {
						Name struct {
							ConstantValue string `json:"constant_value"`
						} `json:"name"`
						NodeCount struct {
							References []string `json:"references"`
						} `json:"node_count"`
						OsDiskSizeGb struct {
							ConstantValue int `json:"constant_value"`
						} `json:"os_disk_size_gb"`
						VMSize struct {
							References []string `json:"references"`
						} `json:"vm_size"`
						VnetSubnetID struct {
							References []string `json:"references"`
						} `json:"vnet_subnet_id"`
					} `json:"default_node_pool"`
					DNSPrefix struct {
						References []string `json:"references"`
					} `json:"dns_prefix"`
					LinuxProfile []struct {
						AdminUsername struct {
							ConstantValue string `json:"constant_value"`
						} `json:"admin_username"`
						SSHKey []struct {
							KeyData struct {
								References []string `json:"references"`
							} `json:"key_data"`
						} `json:"ssh_key"`
					} `json:"linux_profile"`
					Location struct {
						References []string `json:"references"`
					} `json:"location"`
					Name struct {
						References []string `json:"references"`
					} `json:"name"`
					NetworkProfile []struct {
						NetworkPlugin struct {
							ConstantValue string `json:"constant_value"`
						} `json:"network_plugin"`
					} `json:"network_profile"`
					ResourceGroupName struct {
						References []string `json:"references"`
					} `json:"resource_group_name"`
					ServicePrincipal []struct {
						ClientID struct {
							References []string `json:"references"`
						} `json:"client_id"`
						ClientSecret struct {
							References []string `json:"references"`
						} `json:"client_secret"`
					} `json:"service_principal"`
				} `json:"expressions,omitempty"`
				SchemaVersion int `json:"schema_version"`
				Expressions   struct {
					Location struct {
						References []string `json:"references"`
					} `json:"location"`
					Name struct {
						References []string `json:"references"`
					} `json:"name"`
				} `json:"expressions,omitempty"`
				Expressions struct {
					AddressPrefix struct {
						References []string `json:"references"`
					} `json:"address_prefix"`
					Name struct {
						ConstantValue string `json:"constant_value"`
					} `json:"name"`
					ResourceGroupName struct {
						References []string `json:"references"`
					} `json:"resource_group_name"`
					VirtualNetworkName struct {
						References []string `json:"references"`
					} `json:"virtual_network_name"`
				} `json:"expressions,omitempty"`
				Expressions struct {
					AddressSpace struct {
						References []string `json:"references"`
					} `json:"address_space"`
					Location struct {
						References []string `json:"references"`
					} `json:"location"`
					Name struct {
						References []string `json:"references"`
					} `json:"name"`
					ResourceGroupName struct {
						References []string `json:"references"`
					} `json:"resource_group_name"`
				} `json:"expressions,omitempty"`
			} `json:"resources"`
			ModuleCalls struct {
				Variables struct {
					Source      string `json:"source"`
					Expressions struct {
						Environment struct {
							References []string `json:"references"`
						} `json:"environment"`
						Size struct {
							References []string `json:"references"`
						} `json:"size"`
					} `json:"expressions"`
					Module struct {
						Outputs struct {
							NodeCount struct {
								Expression struct {
									References []string `json:"references"`
								} `json:"expression"`
							} `json:"node_count"`
							Subnet struct {
								Expression struct {
									References []string `json:"references"`
								} `json:"expression"`
							} `json:"subnet"`
							VMSize struct {
								Expression struct {
									References []string `json:"references"`
								} `json:"expression"`
							} `json:"vm_size"`
							VnetAddressSpace struct {
								Expression struct {
									References []string `json:"references"`
								} `json:"expression"`
							} `json:"vnet_address_space"`
						} `json:"outputs"`
						Variables struct {
							Environment struct {
								Description string `json:"description"`
							} `json:"environment"`
							NodeCountMap struct {
								Default struct {
									Large  int `json:"large"`
									Medium int `json:"medium"`
									Small  int `json:"small"`
									Xlarge int `json:"xlarge"`
								} `json:"default"`
								Description string `json:"description"`
							} `json:"node_count_map"`
							Size struct {
								Description string `json:"description"`
							} `json:"size"`
							SubnetMap struct {
								Default struct {
									Dev     string `json:"dev"`
									Prod    string `json:"prod"`
									Qa      string `json:"qa"`
									Staging string `json:"staging"`
								} `json:"default"`
								Description string `json:"description"`
							} `json:"subnet_map"`
							VMSizeMap struct {
								Default struct {
									Large  string `json:"large"`
									Medium string `json:"medium"`
									Small  string `json:"small"`
									Xlarge string `json:"xlarge"`
								} `json:"default"`
								Description string `json:"description"`
							} `json:"vm_size_map"`
							VnetAddressSpaceMap struct {
								Default struct {
									Dev     string `json:"dev"`
									Prod    string `json:"prod"`
									Qa      string `json:"qa"`
									Staging string `json:"staging"`
								} `json:"default"`
								Description string `json:"description"`
							} `json:"vnet_address_space_map"`
						} `json:"variables"`
					} `json:"module"`
				} `json:"variables"`
			} `json:"module_calls"`
			Variables struct {
				EnvironmentToSizeMap struct {
					Default struct {
						Dev     string `json:"dev"`
						Prod    string `json:"prod"`
						Qa      string `json:"qa"`
						Staging string `json:"staging"`
					} `json:"default"`
				} `json:"environment_to_size_map"`
				KubernetesClientID struct {
					Description string `json:"description"`
				} `json:"kubernetes_client_id"`
				KubernetesClientSecret struct {
					Description string `json:"description"`
				} `json:"kubernetes_client_secret"`
				PublicSSHKeyPath struct {
					Default     string `json:"default"`
					Description string `json:"description"`
				} `json:"public_ssh_key_path"`
				WorkspaceToEnvironmentMap struct {
					Default struct {
						Dev     string `json:"dev"`
						Prod    string `json:"prod"`
						Qa      string `json:"qa"`
						Staging string `json:"staging"`
					} `json:"default"`
				} `json:"workspace_to_environment_map"`
				WorkspaceToSizeMap struct {
					Default struct {
						Dev string `json:"dev"`
					} `json:"default"`
				} `json:"workspace_to_size_map"`
			} `json:"variables"`
		} `json:"root_module"`
	} `json:"configuration"`
}
