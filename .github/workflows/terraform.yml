name: 'Terraform GitHub Actions'
on:
  # - pull_request
  - push
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      # - name: 'k8s - Terraform Format'
        # uses: hashicorp/terraform-github-actions@master
        # with:
          # tf_actions_version: 0.12.20
          # tf_actions_subcommand: 'fmt'
          # tf_actions_working_dir: 'k8s'
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          
      # - name: 'k8s - Terraform Init'
        # uses: hashicorp/terraform-github-actions@master
        # with:
          # tf_actions_version: 0.12.20
          # tf_actions_subcommand: 'init'
          # tf_actions_working_dir: 'k8s'
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          
      # - name: 'k8s - Terraform Validate'
        # uses: hashicorp/terraform-github-actions@master
        # with:
          # tf_actions_version: 0.12.20
          # tf_actions_subcommand: 'validate'
          # tf_actions_working_dir: 'k8s'
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
      
      # - name: 'k8s - Terraform Plan'
        # uses: hashicorp/terraform-github-actions@master
        # with:
          # tf_actions_version: 0.12.20
          # tf_actions_subcommand: 'plan'
          # tf_actions_working_dir: 'k8s'
          # args: '-var="kubernetes_client_id=${{ secrets.kubernetes_client_id}}" -var="kubernetes_client_secret=${{ secrets.kubernetes_client_secret}}"'
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          # ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          # ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          # ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          # ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Get dependencies
        run: |
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          else
            go get -v -t -d ./...  
          fi          

      - name: Test
        working-directory: /home/runner/work/terraform/terraform/test
        run: go test -run TestTerraformAzure -timeout 30m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_kubernetes_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_kubernetes_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
        
      - name: Commit changed files
        uses: stefanzweifel/git-auto-commit-action@v2.5.0
        with:
          commit_message: Apply automatic changes
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # - name: Setup Terraform Plan Parser
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '10.x'

      # - name : Run Terraform Plan Parser
      #   working-directory: /home/runner/work/terraform/terraform
      #   run: ls -la && npm install -g terraform-plan-parser && parse-terraform-plan --pretty -i k8s.terraform.tfplan
